# ================================================
# Chainsaw
# ================================================
#
# Install cargo-make to run these tasks:
#   cargo install cargo-make

[config]
default_to_workspace = false
skip_core_tasks = true

[env]
CHAINSAW_HTTP_TARGET = "chainsaw-demo-http"
CHAINSAW_GRPC_TARGET = "chainsaw-demo-grpc"

[tasks.tests]
command = "cargo"
args = [ "llvm-cov", "nextest" ]
dependencies = [ "install-llvm-cov", "install-nextest" ]

[tasks.docs]
command = "cargo"
args = ["doc"]

[tasks.grpc]
install_crate = "grpc-build"
command = "grpc_build"
args = [
     "build",
     "--in-dir",
     "chainsaw-proto/proto/helloworld.proto",
     "--out-dir",
     "chainsaw-proto/src/grpc",
     "-f", # force output
     "-s", # generate server impl
     "-c", # generate client impl
]

# ================================================
# Tasks for generating Helm charts.
# ================================================
[tasks.helm-http]
script = """
       echo '# DO NOT EDIT: This file is autogenerated by cargo-make' > chainsaw-http-deploy.yaml

       helm template -f ./helm/chainsaw-http/values.yaml \
            chainsaw-http \
            ./helm/chainsaw-http \
            >> chainsaw-http-deploy.yaml
"""

# ================================================
# Tasks for building Docker images.
# ================================================
[tasks.docker]
dependencies = [ "docker-http", "docker-grpc" ]

[tasks.docker-http]
command = "docker"
args = [
     "build",
     "--tag", # tag as:
     "${CHAINSAW_HTTP_TARGET}",
     "--target",
     "${CHAINSAW_HTTP_TARGET}",
     ".", # build context
]

[tasks.docker-grpc]
command = "docker"
args = [
     "build",
     "--tag", # tag as:
     "${CHAINSAW_GRPC_TARGET}",
     "--target",
     "${CHAINSAW_GRPC_TARGET}",
     ".", # build context
]

# Installation targets must be used to define multiple dependency crates for a
# single target.
#
# See: https://github.com/sagiegurari/cargo-make#multiple-installations
[tasks.install-nextest]
install_crate = { crate_name = "cargo-nextest" }

[tasks.install-llvm-cov]
install_crate = { rustup_component_name = "llvm-tools-preview" }
